service: pharm-backend

provider:
  name: aws
  runtime: nodejs14.x
  region: us-west-2
  timeout: 30 # in seconds
  memorySize: 1024 # 1024 is the default, see https://hackernoon.com/lower-your-aws-lambda-bill-by-increasing-memory-size-yep-e591ae499692
  logs:
    restApi: true
  deploymentBucket:
    name: vaccinenotifier.org.pharm-backend.deployment-${self:custom.stage}  
    # serverSideEncryption: AES256 

  # Environment (process.env.)
  environment:
    # Standard and shared by all services
    stage: ${self:custom.stage}
    region: ${self:provider.region}
    serviceName: ${self:service}
    version: ${git:sha1}
    appFrontendUrl: "${self:custom.protocol.${self:custom.stage}, 'https://'}${self:custom.frontendBaseUrl.${self:custom.stage}}"
    tablePharms: ${self:custom.stage}-pharms
    tableContacts: ${self:custom.stage}-contacts
    LOG_LEVEL: ${self:custom.log_level.${self:custom.stage}, info}
    DEBUG_PCT: ${self:custom.debug_pct.${self:custom.stage}, 0}
    # Service specific vars
    bucketLogs: ${self:custom.stage}-logs-vaccinenotifier-org
    

  # IAM
  iamRoleStatements:
    - Effect: Allow 
      Action: # logging permissions
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:DescribeLogStreams
        - logs:PutLogEvents
        - logs:CreateSubscriptionFilter
        - logs:PutSubscriptionFilter
      Resource: 
        - "arn:aws:logs:${opt:region, self:provider.region}:serverless:log-group:/aws/cognito/*"
        - "arn:aws:logs:${opt:region, self:provider.region}:799934124850:log-group:/metrics/server-shortener-${self:custom.stage}:log-stream"
        - "arn:aws:logs:${opt:region, self:provider.region}:799934124850:log-group:/metrics/trail-shortener-${self:custom.stage}:log-stream:*"
    - Effect: Allow 
      Action: # SES
        - ses:SendEmail
        - ses:SendRawEmail
        - ses:SendTemplatedEmail
        - ses:SendBulkTemplatedEmail
      Resource: 
        - "*"
    
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - !GetAtt pharmsTable.Arn
        - !GetAtt contactsTable.Arn
  
    # S3
    - Effect: "Allow"
      Action:
        - s3:*
        # - s3:ListBucket
        # - s3:PutObject
        # - s3:GetObject
        # - s3:PutObjectTagging
        # - s3:GetObjectTagging
        # - s3:GetBucketLocation
        # - s3:ListBucketMultipartUploads
        # - s3:ListMultipartUploadParts
        # - s3:AbortMultipartUpload
        # - s3:CreateBucket
      Resource:
        # - arn:aws:s3:::${self:provider.environment.bucketLogs}/*
        # - arn:aws:s3:::${self:provider.environment.bucketMetrics}/*
        # - arn:aws:s3:::aws-athena-query-results-*
        - arn:aws:s3:::*

plugins:
  - serverless-deployment-bucket
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-domain-manager
  - serverless-plugin-git-variables
  - serverless-prune-plugin

package:
  exclude:
  - coverage/**
  - .circleci/**
  - examples/**

custom:
  serverless-offline:
    port: 3004
  stage: ${opt:stage, self:provider.stage}
  protocol: 
    local: http://
  cloudFrontDomainName:
    Fn::GetAtt:
      - CloudFrontDistribution
      - DomainName
  dynamodb:
    stages:
      - local
    start:
      port: 8080
      inMemory: true
      migrate: true
      heapInitial: 100m
      heapMax: 1g
      noStart: true
      seed: true
      convertEmptyValues: true
    migration:
      dir: src/migrations
  domains:
    prod: api.vaccinenotifier.org
    dev: dev-api.vaccinenotifier.org
    local: localhost
  frontendBaseUrl:
    prod: vaccinenotifier.org
    dev: dev.vaccinenotifier.org
    local: localhost:3000
  debug_pct:
    prod: 0
    dev: 100
    local: 100
  log_level:
    dev: 'debug'
    prod: 'info'
    local: 'debug'
  prune:
    automatic: true
    number: 5
  webpack:
    webpackConfig: './webpack.config.js'    
  # Using https://github.com/amplify-education/serverless-domain-manager#readme
  # https://github.com/pavel-ignatiev/serverless-domain-manager
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: ${self:custom.stage}
    basePath: 'notifier'
    createRoute53Record: true
    certificateArn: arn:aws:acm:us-west-2:965433530356:certificate/3dbad5b0-3fdc-4c33-9ec3-f4845391879a
    endpointType: 'regional'
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: true

# API
functions:
  version:
    handler: src/version.getServiceVersionHandler
    events:
      - http:
          path: /v1/version
          method: get
          cors: true
  # Pharmacies
  checkZipcode:
    handler: src/pharms.getPharmaciesByZipcodeHandler
    events:
      - http:
          path: /v1/pharmacies
          method: get
          request:
            parameters:
              querystrings:
                zipcode: true
          cors: ${file(./api-config.yml):cors}
  # User subscriptions
  subscribeUser:
    handler: src/pharms.subscribeToNotifications
    events:
      - http:
          path: /v1/subscribe
          method: post
          cors: ${file(./api-config.yml):cors}
  
  # Scheduled Jobs
  # jobCheckAndNotifyContacts:
  #   handler: src/jobs.checkAndNotifyContacts
  #   events:
  #     - schedule: rate(3 minutes)
  #   timeout: 180 # seconds, longer timeout for processing
  
# CloudFormation resource templates here
resources:
  Resources:
    # Tables
    pharmsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.tablePharms}
        AttributeDefinitions:
          - AttributeName: storeId
            AttributeType: S
          - AttributeName: isAvailable
            AttributeType: N
        KeySchema:
          - AttributeName: storeId
            KeyType: HASH
          - AttributeName: isAvailable
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        
    contactsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.tableContacts}
        AttributeDefinitions:
          - AttributeName: phoneMobile
            AttributeType: S
          - AttributeName: isEnabled
            AttributeType: N
        KeySchema:
          - AttributeName: phoneMobile
            KeyType: HASH
          - AttributeName: isEnabled
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    # CORS for 4xx and 5xx responses 
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'